**#Linux Setup**
----------
## Programs to install (APT) Mint
sudo apt update && sudo apt full-upgrade && sudo apt install weechat vim pymol openconnect audacity obs-studio gnuplot tmux htop git dssp ffmpeg python3-pip python3-venv -y && sleep 1 && n="$(awk '/PS1=/ { $0 = "PS1=\x27\\[\\033[0;33m\\][\\W]\\$ \\[\\033[0m\\]\x27" } 1' .bashrc)"; echo "$n" > .bashrc && sleep 1 && printf ':set shiftwidth=4 noexpandtab\n:set softtabstop=4 noexpandtab\n:set list\n:set listchars=tab:»·,trail:·,extends:>,precedes:<,nbsp:+\n:syntax enable\n:set nowrap\n:set number\n:set ts=4 sw=4\n:set cc=81' >> ~/.vimrc && sleep 1 && printf "set -g status-bg black\nset -g status-fg red\nset -g pane-border-style fg=magenta\nset -g pane-active-border-style fg=magenta\nset -g status-justify 'centre'\nset -g status-left-length '100'\nset -g status 'on'\nset -g status-right-length '100'\nsetw -g window-status-separator ''\nset -g status-right '%%H:%%M'\nsetw -g window-status-current-format '#(whoami)'\nset -g status off" > ~/.tmux.conf && sleep 1 && python3 -m venv myenv && sleep 1 && source myenv/bin/activate && sleep 1 && pip install lxml numpy scipy sklearn keras tensorflow matplotlib pandas biopython beautifulsoup4 tqdm && sleep 1 && deactivate
## Programs to install (APT) Ubuntu
sudo apt update && sudo apt full-upgrade && sudo apt install transmission weechat vim pymol openconnect audacity obs-studio gnuplot tmux htop git dssp ffmpeg gnome-tweak-tool python3-pip python3-venv python3-opencv texlive-full -y && sleep 1 && n="$(awk '/PS1=/ { $0 = "PS1=\x27\\[\\033[0;33m\\][\\W]\\$ \\[\\033[0m\\]\x27" } 1' .bashrc)"; echo "$n" > .bashrc && sleep 1 && printf ':set shiftwidth=4 noexpandtab\n:set softtabstop=4 noexpandtab\n:set list\n:set listchars=tab:»·,trail:·,extends:>,precedes:<,nbsp:+\n:syntax enable\n:set nowrap\n:set number\n:set ts=4 sw=4\n:set cc=81' >> ~/.vimrc && sleep 1 && printf "set -g status-bg black\nset -g status-fg red\nset -g pane-border-style fg=magenta\nset -g pane-active-border-style fg=magenta\nset -g status-justify 'centre'\nset -g status-left-length '100'\nset -g status 'on'\nset -g status-right-length '100'\nsetw -g window-status-separator ''\nset -g status-right '%%H:%%M'\nsetw -g window-status-current-format '#(whoami)'\nset -g status off" > ~/.tmux.conf && sleep 1 && python3 -m venv myenv && sleep 1 && source myenv/bin/activate && sleep 1 && pip install lxml numpy scipy sklearn keras tensorflow matplotlib pandas biopython pillow beautifulsoup4 tqdm pyinstaller staticx patchelf-wrapper bayesian-optimization && sleep 1 && deactivate
## Weechat setup
/set buflist.look.enabled off
/server add freenode irc.freenode.net
/server add freenode irc.libera.chat
/server add freenode irc.oftc.net
/set weechat.plugin.autoload *,!logger
/set irc.server_default.autoconnect on
/set irc.server.freenode.addresses "irc.freenode.net/7000"
/set irc.server.freenode.ssl on
/set irc.server.libera.addresses "irc.libera.chat/7000"
/set irc.server.libera.ssl on
/set irc.server.oftc.addresses "irc.oftc.net/6697"
/set irc.server.oftc.ssl on
/set irc.server.freenode.sasl_username NICKNAME
/set irc.server.libera.sasl_username NICKNAME
/set irc.server.oftc.sasl_username NICKNAME
/set irc.server.freenode.sasl_password PASSWORD
/set irc.server.libera.sasl_password PASSWORD
/set irc.server.oftc.sasl_password PASSWORD

/server add twitch irc.chat.twitch.tv
/set irc.server.twitch.autojoin "#sarisabban"
/set irc.server.twitch.username NICKNAME
/set irc.server.twitch.password oauth:***** [http://www.twitchapps.com/tmi/]

## Desktop environment setup Linux Mint
* System Reports>Install hardware drivers
* FirFox>setup
* Xed>View>[X]Statusbar [X]Toolbar
* Xed>Edit>Preferences>[/]Display line numbers [X]Use spaces instead of tabs [X]Word wrap [/]Theme cobalt
* Terminal>[X]Scrolling [/]Scroll on key stroke [X]Menu [/]Theme colours green on back
* System Settings>Background
* System Settings>Themes>Window boarders>Mint-Y-Dark
* System Settings>Themes>Controls>Mint-y-Dark-Grey
* System Settings>Themes>Mouse>Adawita
* System Settings>Account Details> Add picture
* System Settings>Desktop>[X]Computer [X]Home
* System Settings>Panel>Right Mouse Click>Move>Up
* System Settings>Panel>Height>20
* System Settings>Panel Edit Mode>Left Side>Unpin everything
* System Settings>Panel Edit Mode>Right Side>Remove everything except Time, WiFi, Battery
* System Settings>Screen Saver>[X]Lock computer when sleep [X]Lock computer after screen saver
* System Settings>Bluetooth>Disable
* System Settings>Keyboard>Shortcuts>(Home ctrl-alt-H [sh -c 'setsid xdg-open "$HOME" &']) (Text ctrl-alt-G [xed]) (Firefox ctrl-alt-W [firefox])
* System Settings>Keyboard>Layouts>Arabic (Macintosh)
* System Settings>Mouse>Touchpad>[X]Tap to click [/]Horizontal scrolling
* System Settings>Power Management>on A/C and Battery  [X]Inactive turn off screen [X]Inactive suspend [X]When lid is closed
* System Settings>Sound>Sounds>[X]All
## Desktop environment setup Linux Ubuntu
* Settings>Bluetooth>             OFF
* Settings>Background>            Change background
* Settings>Appearance>            Dark + Autohide Dock
* Settings>Notifications>         [X]Lock Screen Notifications
* Settings>Search>                [X]All
* Settings>Privacy>Connectivity>  [X]Connectivity Check
* Settings>Privacy>Location>      [X]Location Services
* Settings>Privacy>Thunderbolt>   [X]Direct Access
* Settings>Privacy>File History>  [X]File History
* Settings>Privacy>Screen Lock>   [X]Blank Screen Delay + [X]Automatic Screen Lock + [X]Lock Screen on Suspend + [X]Show Notifications on Lock Screen
* Settings>Power>                 [X]Automatic brightness [X]Dim screen [X]Blank screen
* Settings>Mouse>                 [X]Tap to click
* Settings>Keyboard>Shortcuts>    (Home ctrl-alt-H [sh -c 'setsid xdg-open "$HOME" &']) (Text ctrl-alt-G [gedit]) (Firefox ctrl-alt-W [firefox])
* Settings>Language>              [Language UK][Format UK][Input Sources Arabic(Macintosh)]
* Settings>Users>                 Image
* Files>Preferences>              [/]List View [/]Allow folders for be expanded
* Text Editor>Preferences>        [/]Display line numbers [X]Highlight current line [/]Tab width 4 [x]Display statusbar [x]Enable text wrapping [/]Cobalt colours
* Terminal>Preferences>           [X]Show scroll bar [/]Green on Black Theme
* Tweek Tools>                    [Remove Trash from Desktop][Yaru-dark][No Sleep When Lid Closes]
* FireFox>                        My Own Setup
----------
## Raspberry Pi
sudo apt install rpi-imager
sudo raspi-config
----------
## Live USB
sudo fdisk -l
sudo dd bs=4M if=FILENAME.iso of=/dev/sdb status=progress oflag=sync
sudo dd bs=4M if=FILENAME.iso of=/dev/sdb status=progress oflag=sync iflag=fullblock
--------------------------------------------------
**#TMUX**
# Environment setups (Linux Mint)
tmux new -s Aziz -n Aziz \; split-window -h -p26 \; split-window -v -p50
tmux new -s Twitch -n Twitch \; split-window -d -t 0 -v -p35 weechat \; split-window -h -p46 htop \; split-window -v -p75 vlc -I ncurses --no-video https://www.youtube.com/watch?v=hHW1oY26kxQ 2> /dev/null \; split-window -v -p70
tmux new -s Bioinformatics -n Bioinformatics \; split-window -d -t 0 -v -p34 weechat \; split-window -h -p46 htop \; split-window -v -p75
tmux new \; split-window -h -p46 htop \; split-window -v -p85
# Write to each buffer:
Ctrl-B
:
setw synchronize-panes on
setw synchronize-panes off
--------------------------------------------------
**#VIM**
# Paste terminal command output to bin:
command | nc termbin.com 9999
# For VIM:
yank normally then
'[,']:w !nc termbin.com 9999
# Convert all string lines into python list:
:%normal! C'CRTL-vr"',
--------------------------------------------------
**#Strong Compression**
xz -0 --keep FILENAME #-0 fast/large -9 slow/small --keep do not delete original file
xz -d COMPRESSEDFILE
**#Strong Compression - directory**
tar -jcvf FILENAME.tar.bz2
xz -0 --keep FILENAME.tar.bz2
**#Split Files**
split -b 3G FILENAME.xz "FILENAME.xz.part"
cat FILENAME.xz.* > FILENAME.xz
--------------------------------------------------
**#PyMOL**
# Generate movies
# Run this script from the terminal using this command:	pymol -c Render.py
import pymol, os, time
os.mkdir('Movie')
cmd.load('Presentation.pse')
cmd.viewport (3840, 2160)
cmd.set('ray_trace_mode', 0)
cmd.mpng('./Movie/video')
time.sleep(10)
os.system('ffmpeg -f image2 -i Movie/video%4d.png -r 30 -vcodec libx264 -b:v 480M -pix_fmt yuv420p -preset:v slower -level 4.2 video.mp4')
--------------------------------------------------
**#FFMPEG**
# Re-encode .mkv to .mp4 to work with samsung TV
for i in *.mkv; do ffmpeg -i "$i" -vcodec libx264 -r 25 -crf 23 -ab 384k -acodec ac3 "${i%.mkv}.mp4"; done
# Record desktop screen
ffmpeg -f x11grab -s 1280x800 -framerate 30 -i :0.0 -c:v libx264rgb Screen.mkv
# LINK TO DIFFERENT COLOUR SYSTEMS: http://math.hws.edu/graphicsbook/demos/c2/rgb-hsv.html
--------------------------------------------------
**#Making a virtual environment**
python3 -m venv myenv
source myenv/bin/activate
pip3 install LIBRARY
deactivate
--------------------------------------------------
**#Conda virtual environment**
conda create -n MLenv python=3.6.1 -y
source activate MLenv
conda install numpy pandas scipy scikit-learn keras tensorflow biopython -y
source deactivate MLenv
--------------------------------------------------
**#All in one executable**
pip3 install pyinstaller staticx patchelf-wrapper
pyinstaller --onefile --windowed test.py
staticx ./test ./test2
--------------------------------------------------
**#Rosetta**
# Download
[https://www.rosettacommons.org/software/academic]
# Compile
sudo apt install zlib1g-dev scons build-essential -y
tar -xvzf {ROSETTA}.tgz
cd {ROSETTA}/main/source
./scons.py mode=release bin
# Cannot compile on AZIZ straighforward because python -V -> python 2.6.6 therefore to compile first load python 2.7.9 then compile normally
module use /app/utils/modules && module load python-2.7.9 gcc-4.9.2
./scons.py -j24 mode=release bin
or just single executables
./scons.py -j4 mode=release bin/AbinitioRelax.default.linuxgccrelease
./scons.py -j4 mode=release bin/relax.default.linuxgccrelease
./scons.py -j4 mode=release bin/combine_silent.default.linuxgccrelease
./scons.py -j4 mode=release bin/extract_pdbs.linuxgccrelease
./scons.py -j4 mode=release bin/cluster.default.linuxgccrelease
./scons.py -j4 mode=release bin/score.linuxgccrelease
--------------------------------------------------
**#PYROSETTA**
# Download
[https://graylab.jhu.edu/download/PyRosetta4/archive/release/PyRosetta4.Release.python38.ubuntu/latest.html]
# Compile
tar -vjxf {PYROSETTA}.tar.bz2
mv {PYROSETTA} PyRosetta && rm {PYROSETTA}.tar.bz2 && mv PyRosetta ~/ && sudo python3 PyRosetta/setup/setup.py install
----
for server use this command only: apt install python3-setuptools && pip3 install PyRosetta/setup
printf "channels:\n  - https://USERNAME:PASSWORD@conda.graylab.jhu.edu\n  - defaults">>.condarc
conda install pyrosetta -y
rm /.condarc
## Download Pyrosetta and upload 
conda install {ROSETTA}.tar.bz2
#######>EASIEST OPTION: conda install --channel https://USERNAME:PASSWORD@conda.graylab.jhu.edu pyrosetta
----> PyRosetta does not work on AZIZ "GlibC error"
source deactivate ML
## To delete
rm -r ~/.conda /fefs1/generic/sabban/.conda
--------------------------------------------------
**#AZIZ Python**
## To setup - cd to FEFS1 DIRECTORY
module use /app/utils/modules
module load anaconda3 python-3.5.2
conda create -n ML python=3.6.1 -y
source activate ML
conda install numpy pandas scipy scikit-learn keras tensorflow biopython -y
source deactivate ML
